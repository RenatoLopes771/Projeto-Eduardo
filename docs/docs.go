// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/usuarios": {
            "get": {
                "description": "Lista todos os usuários.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuarios"
                ],
                "responses": {}
            }
        },
        "/usuarios/atualizar": {
            "put": {
                "description": "Passe um email de um usuario existente. Preencha somente os campos que quer atualizar.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuarios"
                ],
                "parameters": [
                    {
                        "description": "Corpo JSON",
                        "name": "JSON",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.usuarioUpdate"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/usuarios/criar": {
            "post": {
                "description": "Cria um usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuarios"
                ],
                "parameters": [
                    {
                        "description": "Corpo JSON",
                        "name": "JSON",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.usuarioCreate"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/usuarios/deletar": {
            "delete": {
                "description": "Passe um ID de um usuário existente e sua senha para o deletar.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuarios"
                ],
                "parameters": [
                    {
                        "description": "Corpo JSON",
                        "name": "JSON",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.usuarioDelete"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "controllers.usuarioCreate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "senha": {
                    "type": "string"
                }
            }
        },
        "controllers.usuarioDelete": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "senha": {
                    "type": "string"
                }
            }
        },
        "controllers.usuarioUpdate": {
            "type": "object",
            "properties": {
                "emailAtual": {
                    "type": "string"
                },
                "emailNovo": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "senhaAtual": {
                    "type": "string"
                },
                "senhaNova": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "localhost:3429",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Projeto do Desafio Go CRUD",
	Description:      "Para saber mais leia o README.md",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
